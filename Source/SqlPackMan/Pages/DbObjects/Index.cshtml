@page "{searchStringDB?}/{searchStringName?}"
@model SqlPackMan.Pages.DbObjects.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>DDS SQL Development Packages</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<hr />
<form asp-page="./Index" method="get">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    Filter by Object Type:
                    <select asp-for="SearchStringType" asp-items="Model.DbObjectTypeSL">
                        <!-- <option value="">Select Database</option>-->
                    </select>
                </div>
                <div class="form-group">
                    Filter by Object Name: <br />
                    <input type="text" name="SearchStringName" value="@Model.CurrentFilterName" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Search" class="btn btn-default" />
                    <br />                    
                </div>
            </div>
            </div>
        </div>  
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilterDB="@Model.CurrentFilterType"
                   asp-route-currentFilterName="@Model.CurrentFilterName">
                    @Html.DisplayNameFor(model => model.DbObjects[0].ObjectName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TypeSort"
                   asp-route-currentFilterDB="@Model.CurrentFilterType"
                   asp-route-currentFilterName="@Model.CurrentFilterName">
                    @Html.DisplayNameFor(model => model.DbObjects[0].Status.Label)
                </a>
            </th>
 
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.DbObjects)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ObjectName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DbObjectType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status.Label)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StatusDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Package.CurEnvironment.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Package.MaxEnvironment.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Version)
            </td>

            <td>
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.DbObjects.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.DbObjects.HasNextPage ? "disabled" : "";
}
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.DbObjects.PageIndex - 1)"
   asp-route-Type="@Model.CurrentFilterType"
   asp-route-currentFilterName="@Model.CurrentFilterName"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.DbObjects.PageIndex + 1)"
   asp-route-currentFilterDb="@Model.CurrentFilterType"
   asp-route-currentFilterName="@Model.CurrentFilterName"
   class="btn btn-default @nextDisabled">
    Next
</a>