@page "{packageId?}/{currentFilterType?}/{currentFilterName?}"
@model SqlPackMan.Pages.DbObjects.IndexModel
@using System.Linq

@{
    ViewData["Title"] = "Index";
}

<h1>Select Database Objects for Package</h1>

<hr />
<form asp-page="./Index" method="get">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    Filter by Object Type:
                    <select asp-for="SearchIntType" asp-items="Html.GetEnumSelectList<Enums.DbObjectType>()">
                        <!-- <option value="">Select Database</option>-->
                    </select>
                </div>
                <div class="form-group">
                    Filter by Object Name: <br />
                    <input type="text" name="SearchStringName" value="@Model.CurrentFilterName" />
                </div>
                <div class="form-group">
                    <input type="hidden" name="currentFilterDB" value="@Model.CurrentFilterDB"/>
                    <input type="hidden" name="packageId" value="@Model.CurrentPackageId"/>
                    <input type="submit" name="button" value="search" class="btn btn-default" />
                    <br />
                </div>
            </div>
        </div>
    </div>
</form>
@if (Model.Names != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                       asp-route-currentFilterType="@Model.CurrentFilterType"
                       asp-route-currentFilterName="@Model.CurrentFilterName">
                        DB Object Name
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>

            @for (var i= 0;i < Model.DbObjNames.Count();i++)
            {
                <tr>
                    <td>
                        <input type="checkbox" asp-for="@Model.DbObjNames[i].Selected" />
                        <label for="@Model.DbObjNames[i].Name">@Model.DbObjNames[i].Name</label>
                    </td>
                </tr>
            }

        </tbody>
    </table>

    var prevDisabled = !Model.Names.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Names.HasNextPage ? "disabled" : "";

    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Names.PageIndex - 1)"
       asp-route-Type="@Model.CurrentFilterType"
       asp-route-currentFilterName="@Model.CurrentFilterName"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Names.PageIndex + 1)"
       asp-route-currentFilterDb="@Model.CurrentFilterType"
       asp-route-currentFilterName="@Model.CurrentFilterName"
       class="btn btn-default @nextDisabled">
        Next
    </a>}