// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqlPackMan.Models;

namespace SqlPackMan.Migrations
{
    [DbContext(typeof(SqlPackManContext))]
    [Migration("20190325224240_initial2")]
    partial class initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SqlPackMan.Models.DbObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemTypeId");

                    b.Property<string>("ObjectName");

                    b.Property<int>("PackageId");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.ToTable("DbObject");
                });

            modelBuilder.Entity("SqlPackMan.Models.DdsEnvironment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Server");

                    b.Property<string>("SourceControlPath");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("DdsEnvironment");
                });

            modelBuilder.Entity("SqlPackMan.Models.Migration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DdsEnvironmentId");

                    b.Property<string>("Name");

                    b.Property<int>("PackageId");

                    b.Property<string>("PackageScript");

                    b.Property<string>("PostScript");

                    b.Property<string>("PreScript");

                    b.Property<string>("Status");

                    b.Property<int>("TargetEnvironment");

                    b.HasKey("Id");

                    b.HasIndex("DdsEnvironmentId");

                    b.HasIndex("PackageId");

                    b.ToTable("Migration");
                });

            modelBuilder.Entity("SqlPackMan.Models.MigrationResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MigrationId");

                    b.Property<string>("ResultText");

                    b.Property<string>("Step");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("MigrationId");

                    b.ToTable("MigrationResult");
                });

            modelBuilder.Entity("SqlPackMan.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DbName");

                    b.Property<int>("DdsEnvironmentId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("Description");

                    b.Property<int>("MaxEnvironmentId");

                    b.Property<string>("Name");

                    b.Property<string>("Status");

                    b.Property<DateTime>("StatusDate");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("SqlPackMan.Models.DbObject", b =>
                {
                    b.HasOne("SqlPackMan.Models.Package", "Package")
                        .WithMany("Items")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SqlPackMan.Models.Migration", b =>
                {
                    b.HasOne("SqlPackMan.Models.DdsEnvironment", "Environment")
                        .WithMany()
                        .HasForeignKey("DdsEnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SqlPackMan.Models.Package", "Package")
                        .WithMany("Migrations")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SqlPackMan.Models.MigrationResult", b =>
                {
                    b.HasOne("SqlPackMan.Models.Migration", "Migration")
                        .WithMany("MigrationResults")
                        .HasForeignKey("MigrationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
